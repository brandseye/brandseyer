% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/authentication.R
\name{authentication}
\alias{authenticate}
\alias{authentication}
\alias{authentication_filename}
\title{Authenticate yourself with BrandsEye}
\usage{
authentication(key = NULL, user = NULL, password = NULL)

authentication_filename()

authenticate(key = NULL, user = NULL, password = NULL, save = FALSE)
}
\arguments{
\item{key}{Your API key. Contact your client service representative if you do
not already have one. You do not need to have a username or password if you are
using an API key.}

\item{user}{Your username, if you know it. This should be used with your password.}

\item{password}{To be used in conjunction with a username}

\item{save}{Set this to true if your authentication details should be saved
  across sessions.}
}
\description{
Provides a means to authenticate yourself with the BrandsEye API. Most of the time
you will want to do this using a BrandsEye API key.
}
\details{
This function allows you to set a global variable holding your authentication details.
The various BrandsEyeR functions will use these authentication details when communicating
with the BrandsEye API.

It's possible to set up default authentication information as well which will be
loaded automatically every time you load the BrandsEyeR library.

In your home directory,
create the file \code{$HOME/.brandseyerd/authentication.json}.

This file can contain either a key, or a user / password pair. For example, to
specify your key, the file should contain:

\verb{
 \{
     "key": "12342342342354345"
 \}
}

To specify a username and password pair, the file should contain:

\verb{
 \{
     "user": "rudy.neeser@brandseye.com",
     "password": "This would be awkward if it were my real password"
 \}
}

You can use the \code{authenticate} function to save a stub file
for you to edit in your home directory. On windows, this might be in your
\code{My Documents} directory. You can use the \code{authentication_filename}
function to find the directory and file name to save the authentication file in.

You can also use the \code{authenticate} file to create the file for
you in the appropriate place. Call it with no arguments to just make an empty file.
If you provide arguments, it will fill in the file for you, as needed.

Be wary of calling it with arguments, since your key or password will
land up in your R history file. The best practise is to call
\code{authenticate} with only \code{save = TRUE}  and
no other arguments set and edit the file manually.
On a shared computer, set permissions on that file so that only your user
can read it. Your authentication details are saved in plain text.
}
\section{Functions}{
\itemize{
\item \code{authentication_filename}: Returns the file name in which you can save your authentication information.

\item \code{authenticate}: Save your authentication for your current R session, or in a file for later R sessions.
}}
\examples{
\dontrun{

authentication("adfd42345f534fgdfgd")
authentication(key = "adfd42345f534fgdfgd")

# Authenticating with a username and password
authentication(user = "jo.blogs@brandseye.com",
               password ="This is a safe password!!")

}
\dontrun{

# Create a json stub to fill in your authentication details:
authenticate(save = TRUE)
# And this will be created at:
authentication_filename()

# Log in for the session
authenticate(key = "this is my api key")
# Use the API with those credentials
account_count("QUIR01BA", "published inthelast month")

}
}
\author{
Rudy Neeser
}

